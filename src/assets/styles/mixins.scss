// 响应式断点混入
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: 480px) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: 481px) and (max-width: 768px) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: 769px) and (max-width: 992px) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: 993px) and (max-width: 1200px) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: 1201px) { @content; }
  }
}

// 文本省略混入
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 清除浮动混入
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 居中混入
@mixin center($type: 'both') {
  @if $type == 'both' {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $type == 'horizontal' {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  } @else if $type == 'vertical' {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }
}

// Flexbox 混入
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 按钮样式混入
@mixin button-style($bg-color: $primary-color, $text-color: white, $border-color: transparent) {
  background-color: $bg-color;
  color: $text-color;
  border: 1px solid $border-color;
  border-radius: $border-radius;
  padding: $spacing-sm $spacing-md;
  font-size: $font-size-sm;
  font-weight: 500;
  cursor: pointer;
  transition: all $transition-duration;
  
  &:hover {
    opacity: 0.8;
  }
  
  &:active {
    transform: scale(0.98);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// 卡片样式混入
@mixin card-style($padding: $spacing-md, $shadow: $box-shadow-light) {
  background-color: $background-color-white;
  border-radius: $border-radius;
  box-shadow: $shadow;
  padding: $padding;
}

// 输入框样式混入
@mixin input-style($border-color: $border-color, $focus-color: $primary-color) {
  border: 1px solid $border-color;
  border-radius: $border-radius-small;
  padding: $spacing-sm;
  font-size: $font-size-sm;
  transition: border-color $transition-duration;
  
  &:focus {
    outline: none;
    border-color: $focus-color;
  }
  
  &:disabled {
    background-color: $background-color-light;
    cursor: not-allowed;
  }
}

// 动画混入
@mixin fade-in($duration: $transition-duration) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-in($direction: 'up', $duration: $transition-duration) {
  animation: slideIn#{$direction} $duration ease-out;
}

// 滚动条样式混入
@mixin scrollbar($width: 6px, $track-color: transparent, $thumb-color: rgba(0, 0, 0, 0.2)) {
  &::-webkit-scrollbar {
    width: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
    
    &:hover {
      background: rgba(0, 0, 0, 0.3);
    }
  }
}

// 安全区域混入（适配刘海屏）
@mixin safe-area($property: padding, $side: bottom) {
  #{$property}-#{$side}: env(safe-area-inset-#{$side});
}

// 动画关键帧
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
} 