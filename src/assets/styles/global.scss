@import './variables.scss';
@import './mixins.scss';

// 全局重置样式
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  height: 100%;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: $line-height;
  color: var(--text-color-primary);
  background-color: var(--background-color);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// 滚动条样式
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 3px;
  
  &:hover {
    background: rgba(0, 0, 0, 0.3);
  }
}

// 链接样式
a {
  color: var(--primary-color);
  text-decoration: none;
  
  &:hover {
    text-decoration: underline;
  }
}

// 图片样式
img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
}

// 按钮重置
button {
  border: none;
  background: none;
  cursor: pointer;
  font-family: inherit;
  
  &:focus {
    outline: none;
  }
}

// 输入框重置
input, textarea, select {
  font-family: inherit;
  font-size: inherit;
  
  &:focus {
    outline: none;
  }
}

// 列表重置
ul, ol {
  list-style: none;
}

// 表格重置
table {
  border-collapse: collapse;
  border-spacing: 0;
}

// 工具类
.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-ellipsis {
  @include text-ellipsis;
}

.text-ellipsis-2 {
  @include text-ellipsis(2);
}

.text-ellipsis-3 {
  @include text-ellipsis(3);
}

.flex {
  @include flex;
}

.flex-column {
  @include flex(column);
}

.flex-center {
  @include flex(row, center, center);
}

.flex-between {
  @include flex(row, space-between, center);
}

.flex-around {
  @include flex(row, space-around, center);
}

.flex-wrap {
  @include flex(row, flex-start, stretch, wrap);
}

.hidden {
  display: none !important;
}

.visible {
  display: block !important;
}

.invisible {
  visibility: hidden;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.sticky {
  position: sticky;
}

// 间距工具类
.m-0 { margin: 0 !important; }
.m-1 { margin: $spacing-xs !important; }
.m-2 { margin: $spacing-sm !important; }
.m-3 { margin: $spacing-md !important; }
.m-4 { margin: $spacing-lg !important; }
.m-5 { margin: $spacing-xl !important; }

.p-0 { padding: 0 !important; }
.p-1 { padding: $spacing-xs !important; }
.p-2 { padding: $spacing-sm !important; }
.p-3 { padding: $spacing-md !important; }
.p-4 { padding: $spacing-lg !important; }
.p-5 { padding: $spacing-xl !important; }

// 字体大小工具类
.text-xs { font-size: $font-size-xs !important; }
.text-sm { font-size: $font-size-sm !important; }
.text-md { font-size: $font-size-md !important; }
.text-lg { font-size: $font-size-lg !important; }
.text-xl { font-size: $font-size-xl !important; }
.text-xxl { font-size: $font-size-xxl !important; }

// 颜色工具类
.text-primary { color: var(--primary-color) !important; }
.text-success { color: var(--success-color) !important; }
.text-warning { color: var(--warning-color) !important; }
.text-danger { color: var(--danger-color) !important; }
.text-info { color: var(--info-color) !important; }

.text-muted { color: var(--text-color-secondary) !important; }
.text-light { color: var(--text-color-placeholder) !important; }

// 圆角工具类
.rounded { border-radius: $border-radius !important; }
.rounded-sm { border-radius: $border-radius-small !important; }
.rounded-lg { border-radius: $border-radius-large !important; }
.rounded-circle { border-radius: 50% !important; }

// 阴影工具类
.shadow { box-shadow: var(--box-shadow) !important; }
.shadow-light { box-shadow: var(--box-shadow-light) !important; }
.shadow-none { box-shadow: none !important; }

// 过渡动画工具类
.transition { transition: all $transition-duration ease-in-out; }
.transition-fast { transition: all $transition-duration-fast ease-in-out; }
.transition-slow { transition: all $transition-duration-slow ease-in-out; }

// 响应式工具类
@include respond-to(xs) {
  .hidden-xs { display: none !important; }
  .visible-xs { display: block !important; }
}

@include respond-to(sm) {
  .hidden-sm { display: none !important; }
  .visible-sm { display: block !important; }
}

@include respond-to(md) {
  .hidden-md { display: none !important; }
  .visible-md { display: block !important; }
}

@include respond-to(lg) {
  .hidden-lg { display: none !important; }
  .visible-lg { display: block !important; }
}

@include respond-to(xl) {
  .hidden-xl { display: none !important; }
  .visible-xl { display: block !important; }
} 